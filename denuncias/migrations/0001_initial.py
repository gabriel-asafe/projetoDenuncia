# Generated by Django 5.2 on 2025-04-17 05:41

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='StatusDenuncia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_status', models.CharField(max_length=50, unique=True)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('cor', models.CharField(default='#FFFFFF', help_text='Cor em hexadecimal (ex: #FF0000 para vermelho)', max_length=7)),
            ],
            options={
                'verbose_name': 'Status de Denúncia',
                'verbose_name_plural': 'Status de Denúncias',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telefone', models.CharField(blank=True, max_length=20, null=True)),
                ('data_nascimento', models.DateField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Denuncia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('desmatamento', 'Desmatamento'), ('queimada', 'Queimada'), ('poluicao', 'Poluição'), ('caca_ilegal', 'Caça Ilegal'), ('pesca_predatoria', 'Pesca Predatória'), ('outro', 'Outro')], max_length=100)),
                ('descricao', models.TextField()),
                ('data_ocorrencia', models.DateField()),
                ('hora_ocorrencia', models.TimeField()),
                ('data_denuncia', models.DateTimeField(auto_now_add=True)),
                ('bairro', models.CharField(choices=[('Abaíra', 'Abaíra'), ('Andaraí', 'Andaraí'), ('Barra da Estiva', 'Barra da Estiva'), ('Boninal', 'Boninal'), ('Bonito', 'Bonito'), ('Ibicoara', 'Ibicoara'), ('Ibitiara', 'Ibitiara'), ('Iramaia', 'Iramaia'), ('Iraquara', 'Iraquara'), ('Itaetê', 'Itaetê'), ('Jussiape', 'Jussiape'), ('Lençóis', 'Lençóis'), ('Marcionílio Souza', 'Marcionílio Souza'), ('Morro do Chapéu', 'Morro do Chapéu'), ('Mucugê', 'Mucugê'), ('Nova Redenção', 'Nova Redenção'), ('Novo Horizonte', 'Novo Horizonte'), ('Palmeiras', 'Palmeiras'), ('Piatã', 'Piatã'), ('Rio de Contas', 'Rio de Contas'), ('Seabra', 'Seabra'), ('Souto Soares', 'Souto Soares'), ('Utinga', 'Utinga'), ('Wagner', 'Wagner')], max_length=100)),
                ('bairro_outro', models.CharField(blank=True, max_length=100, null=True)),
                ('complemento', models.CharField(blank=True, max_length=255, null=True)),
                ('contato_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('imagem', models.ImageField(blank=True, null=True, upload_to='denuncias/imagens/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png', 'gif'])])),
                ('video', models.FileField(blank=True, null=True, upload_to='denuncias/videos/%Y/%m/%d/', validators=[django.core.validators.FileExtensionValidator(['mp4', 'avi', 'mov', 'mpeg'])])),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='denuncias', to=settings.AUTH_USER_MODEL)),
                ('status', models.ForeignKey(blank=True, default=1, null=True, on_delete=django.db.models.deletion.SET_NULL, to='denuncias.statusdenuncia')),
            ],
            options={
                'verbose_name': 'Denúncia',
                'verbose_name_plural': 'Denúncias',
                'ordering': ['-data_denuncia'],
            },
        ),
    ]
